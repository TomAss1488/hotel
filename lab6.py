import streamlit as st
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from Lab4 import Base  # —Ç–≤—ñ–π —Ñ–∞–π–ª –∑ –º–æ–¥–µ–ª—è–º–∏
from Lab4 import (Hotel, Guest, RoomType, Room, Service, GuestService,
                  Position, Staff, Booking, Payment, RoomStatus, BookingStatus, PaymentMethod)
import datetime

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î
engine = create_engine('sqlite:///hotel\hotel_management.db')
Session = sessionmaker(bind=engine)
session = Session()

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å
Base.metadata.create_all(engine)

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é Streamlit
st.set_page_config(page_title="–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥–æ—Ç–µ–ª–µ–º", layout="wide")
st.title("üè® –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥–æ—Ç–µ–ª–µ–º")

menu = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª:", [
    "–ì–æ–ª–æ–≤–Ω–∞",
    "–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≥–æ—Ç–µ–ª—å",
    "–ú–µ–Ω—é –≥–æ—Å—Ç–µ–π",
    "–ú–µ–Ω—é —Ç–∏–ø—ñ–≤ –∫—ñ–º–Ω–∞—Ç",
    "–ú–µ–Ω—é –∫—ñ–º–Ω–∞—Ç",
    "–ú–µ–Ω—é –ø–æ—Å–∞–¥",
    "–ú–µ–Ω—é –ø–µ—Ä—Å–æ–Ω–∞–ª—É",
    "–ú–µ–Ω—é –ø–æ—Å–ª—É–≥",
    "–ú–µ–Ω—é –±—Ä–æ–Ω—é–≤–∞–Ω—å",
    "–ú–µ–Ω—é –ø–æ—Å–ª—É–≥ –≥–æ—Å—Ç–µ–π",
    "–ú–µ–Ω—é –æ–ø–ª–∞—Ç"
])

# –û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –º–µ–Ω—é
if menu == "–ì–æ–ª–æ–≤–Ω–∞":
    st.subheader("–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ —Å–∏—Å—Ç–µ–º–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –≥–æ—Ç–µ–ª–µ–º!")
    st.markdown("–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –∑–ª—ñ–≤–∞ –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏.")

elif menu == "–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≥–æ—Ç–µ–ª—å":
    st.subheader("–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≥–æ—Ç–µ–ª—å")
    name = st.text_input("–ù–∞–∑–≤–∞ –≥–æ—Ç–µ–ª—é")
    city = st.text_input("–ú—ñ—Å—Ç–æ")
    address = st.text_input("–ê–¥—Ä–µ—Å–∞")
    if st.button("–ó–±–µ—Ä–µ–≥—Ç–∏"):
        new_hotel = Hotel(name=name, city=city, address=address)
        session.add(new_hotel)
        session.commit()
        st.success("–ì–æ—Ç–µ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!")

elif menu == "–ú–µ–Ω—é –≥–æ—Å—Ç–µ–π":
    st.subheader("üë§ –ú–µ–Ω—é –≥–æ—Å—Ç–µ–π")

    tab1, tab2, tab3, tab4 = st.tabs(["‚ûï –î–æ–¥–∞—Ç–∏", "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏", "üîç –ü–æ—à—É–∫", "‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏"])

    # ‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è –≥–æ—Å—Ç—è
    with tab1:
        with st.form("add_guest_form"):
            name = st.text_input("–ü–Ü–ë –≥–æ—Å—Ç—è")
            age = st.number_input("–í—ñ–∫", min_value=0, max_value=120, step=1)
            phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω")
            email = st.text_input("Email")
            passport = st.text_input("–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞")
            submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏")
            if submitted:
                guest = Guest(name=name, age=age, phone=phone, email=email, passport=passport)
                session.add(guest)
                session.commit()
                st.success("‚úÖ –ì—ñ—Å—Ç—å –¥–æ–¥–∞–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ")

    # üìã –ü–µ—Ä–µ–≥–ª—è–¥ —É—Å—ñ—Ö –≥–æ—Å—Ç–µ–π + —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    with tab2:
        sort = st.checkbox("–°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑–∞ –≤—ñ–∫–æ–º", value=False)
        guests = session.query(Guest).order_by(Guest.age if sort else Guest.id).all()
        if guests:
            for g in guests:
                st.markdown(f"""
                **ID:** {g.id} | **–ü–Ü–ë:** {g.name} | **–í—ñ–∫:** {g.age}  
                üìû {g.phone} | ‚úâÔ∏è {g.email} | üÜî {g.passport}
                ---""")
        else:
            st.info("–ì–æ—Å—Ç–µ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

    # üîç –ü–æ—à—É–∫ –≥–æ—Å—Ç–µ–π
    with tab3:
        keyword = st.text_input("–ü–æ—à—É–∫ –∑–∞ –ü–Ü–ë –∞–±–æ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º")
        if keyword:
            results = session.query(Guest).filter(
                (Guest.name.contains(keyword)) | (Guest.phone.contains(keyword))
            ).all()
            if results:
                for g in results:
                    st.markdown(f"""
                    **ID:** {g.id} | **–ü–Ü–ë:** {g.name} | **–í—ñ–∫:** {g.age}  
                    üìû {g.phone} | ‚úâÔ∏è {g.email} | üÜî {g.passport}
                    ---""")
            else:
                st.warning("–ì–æ—Å—Ç–µ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

    # ‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    with tab4:
        guests = session.query(Guest).all()
        guest_ids = {f"{g.id} - {g.name}": g.id for g in guests}
        selected = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –≥–æ—Å—Ç—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è/–≤–∏–¥–∞–ª–µ–Ω–Ω—è", list(guest_ids.keys()))
        guest_id = guest_ids[selected]
        guest = session.query(Guest).get(guest_id)

        with st.form("edit_guest_form"):
            new_name = st.text_input("–ü–Ü–ë", guest.name)
            new_age = st.number_input("–í—ñ–∫", 0, 120, guest.age)
            new_phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω", guest.phone)
            new_email = st.text_input("Email", guest.email)
            new_passport = st.text_input("–ü–∞—Å–ø–æ—Ä—Ç", guest.passport)
            submitted = st.form_submit_button("–û–Ω–æ–≤–∏—Ç–∏")
            if submitted:
                guest.name = new_name
                guest.age = new_age
                guest.phone = new_phone
                guest.email = new_email
                guest.passport = new_passport
                session.commit()
                st.success("‚úÖ –î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ")

        if st.button("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ —Ü—å–æ–≥–æ –≥–æ—Å—Ç—è"):
            session.delete(guest)
            session.commit()
            st.success("üóëÔ∏è –ì—ñ—Å—Ç—å –≤–∏–¥–∞–ª–µ–Ω–∏–π")
            st.experimental_rerun()

elif menu == "–ú–µ–Ω—é —Ç–∏–ø—ñ–≤ –∫—ñ–º–Ω–∞—Ç":
    st.subheader("üè® –ú–µ–Ω—é —Ç–∏–ø—ñ–≤ –∫—ñ–º–Ω–∞—Ç")

    tab1, tab2, tab3, tab4 = st.tabs(["‚ûï –î–æ–¥–∞—Ç–∏", "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ / –°–æ—Ä—Ç—É–≤–∞—Ç–∏", "üîç –ü–æ—à—É–∫", "‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏"])

    # ‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–∏–ø—É –∫—ñ–º–Ω–∞—Ç–∏
    with tab1:
        with st.form("add_room_type_form"):
            room_type = st.selectbox("–¢–∏–ø –∫—ñ–º–Ω–∞—Ç–∏", ["–°—Ç–∞–Ω–¥–∞—Ä—Ç", "–õ—é–∫—Å", "–ê–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∏"])
            submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏")

            if submitted:
                if room_type.lower() == "—Å—Ç–∞–Ω–¥–∞—Ä—Ç":
                    price, max_guests = 50, 2
                elif room_type.lower() == "–ª—é–∫—Å":
                    price, max_guests = 150, 4
                elif room_type.lower() == "–∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∏":
                    price, max_guests = 300, 6
                else:
                    st.error("‚ùå –ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø –∫—ñ–º–Ω–∞—Ç–∏.")
                    st.stop()

                rt = RoomType(type=room_type, price=price, max_guests=max_guests)
                session.add(rt)
                session.commit()
                st.success("‚úÖ –¢–∏–ø –∫—ñ–º–Ω–∞—Ç–∏ –¥–æ–¥–∞–Ω–æ.")

    # üìã –ü–µ—Ä–µ–≥–ª—è–¥ —É—Å—ñ—Ö + —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
    with tab2:
        sort_by = st.radio("–°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑–∞:", ["ID", "–¶—ñ–Ω–∞", "–ú–∞–∫—Å. –≥–æ—Å—Ç–µ–π"], horizontal=True)
        if sort_by == "–¶—ñ–Ω–∞":
            room_types = session.query(RoomType).order_by(RoomType.price).all()
        elif sort_by == "–ú–∞–∫—Å. –≥–æ—Å—Ç–µ–π":
            room_types = session.query(RoomType).order_by(RoomType.max_guests).all()
        else:
            room_types = session.query(RoomType).order_by(RoomType.id).all()

        if room_types:
            for t in room_types:
                st.markdown(f"""
                **ID:** {t.id} | **–¢–∏–ø:** {t.type}  
                üí∞ {t.price} / –Ω—ñ—á | üë• –ú–∞–∫—Å. –≥–æ—Å—Ç–µ–π: {t.max_guests}
                ---""")
        else:
            st.info("–¢–∏–ø–∏ –∫—ñ–º–Ω–∞—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")

    # üîç –ü–æ—à—É–∫ —Ç–∏–ø—É
    with tab3:
        keyword = st.text_input("–í–≤–µ–¥—ñ—Ç—å —Ç–∏–ø –∫—ñ–º–Ω–∞—Ç–∏ –¥–ª—è –ø–æ—à—É–∫—É")
        if keyword:
            results = session.query(RoomType).filter(RoomType.type.ilike(f"%{keyword}%")).all()
            if results:
                for t in results:
                    st.markdown(f"""
                    **ID:** {t.id} | **–¢–∏–ø:** {t.type}  
                    üí∞ {t.price} / –Ω—ñ—á | üë• –ú–∞–∫—Å. –≥–æ—Å—Ç–µ–π: {t.max_guests}
                    ---""")
            else:
                st.warning("‚ùå –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

    # ‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è / –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    with tab4:
        all_types = session.query(RoomType).all()
        if all_types:
            options = {f"{t.id} - {t.type}": t.id for t in all_types}
            selected = st.selectbox("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–±–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è", list(options.keys()))
            selected_id = options[selected]
            rt = session.query(RoomType).get(selected_id)

            with st.form("edit_room_type_form"):
                new_type = st.text_input("–¢–∏–ø", rt.type)
                new_price = st.number_input("–¶—ñ–Ω–∞", value=rt.price, min_value=0.0)
                new_max_guests = st.number_input("–ú–∞–∫—Å. –≥–æ—Å—Ç–µ–π", value=rt.max_guests, min_value=1)
                update_btn = st.form_submit_button("–û–Ω–æ–≤–∏—Ç–∏")

                if update_btn:
                    rt.type = new_type
                    rt.price = new_price
                    rt.max_guests = new_max_guests
                    session.commit()
                    st.success("‚úÖ –î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ")

            if st.button("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π —Ç–∏–ø –∫—ñ–º–Ω–∞—Ç–∏"):
                session.delete(rt)
                session.commit()
                st.success("üóëÔ∏è –¢–∏–ø –∫—ñ–º–Ω–∞—Ç–∏ –≤–∏–¥–∞–ª–µ–Ω–æ")
                st.experimental_rerun()
        else:
            st.info("–¢–∏–ø–∏ –∫—ñ–º–Ω–∞—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")

elif menu == "–ú–µ–Ω—é –∫—ñ–º–Ω–∞—Ç":
    st.subheader("üõèÔ∏è –ú–µ–Ω—é –∫—ñ–º–Ω–∞—Ç")

    tab1, tab2, tab3 = st.tabs(["‚ûï –î–æ–¥–∞—Ç–∏", "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏", "‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏"])

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—Å—ñ—Ö —Ç–∏–ø—ñ–≤ –∫—ñ–º–Ω–∞—Ç
    room_types = session.query(RoomType).all()
    type_dict = {f"{t.type} (ID {t.id})": t.id for t in room_types}
    status_options = {status.name: status.value for status in RoomStatus}

    # ‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è
    with tab1:
        if not room_types:
            st.warning("‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É –¥–æ–¥–∞–π—Ç–µ —Ö–æ—á–∞ –± –æ–¥–∏–Ω —Ç–∏–ø –∫—ñ–º–Ω–∞—Ç–∏.")
        else:
            with st.form("add_room_form"):
                selected_type = st.selectbox("–¢–∏–ø –∫—ñ–º–Ω–∞—Ç–∏", list(type_dict.keys()))
                selected_status = st.selectbox("–°—Ç–∞—Ç—É—Å", list(status_options.keys()))
                submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –∫—ñ–º–Ω–∞—Ç—É")

                if submitted:
                    type_id = type_dict[selected_type]
                    room_type = session.query(RoomType).get(type_id)
                    new_room = Room(
                        type_id=type_id,
                        status=RoomStatus[selected_status],
                        price_per_night=room_type.price
                    )
                    session.add(new_room)
                    session.commit()
                    st.success("‚úÖ –ö—ñ–º–Ω–∞—Ç–∞ –¥–æ–¥–∞–Ω–∞!")

    # üìã –ü–µ—Ä–µ–≥–ª—è–¥
    with tab2:
        rooms = session.query(Room).all()
        if rooms:
            for r in rooms:
                st.markdown(f"""
                **ID:** {r.id} | **–¢–∏–ø:** {r.type.type}  
                üìä –°—Ç–∞—Ç—É—Å: {r.status.value} | üíµ –¶—ñ–Ω–∞: {r.price_per_night}
                ---""")
        else:
            st.info("–ù–µ–º–∞—î –¥–æ–¥–∞–Ω–∏—Ö –∫—ñ–º–Ω–∞—Ç.")

    # ‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è / –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    with tab3:
        all_rooms = session.query(Room).all()
        if all_rooms:
            options = {f"–ö—ñ–º–Ω–∞—Ç–∞ {r.id} ({r.type.type})": r.id for r in all_rooms}
            selected = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –∫—ñ–º–Ω–∞—Ç—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–±–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è", list(options.keys()))
            room_id = options[selected]
            room = session.query(Room).get(room_id)

            with st.form("edit_room_form"):
                new_type = st.selectbox("–¢–∏–ø", list(type_dict.keys()), index=list(type_dict.values()).index(room.type_id))
                new_status = st.selectbox("–°—Ç–∞—Ç—É—Å", list(status_options.keys()), index=list(status_options.values()).index(room.status.value))
                new_price = st.number_input("–¶—ñ–Ω–∞ –∑–∞ –Ω—ñ—á", value=room.price_per_night, min_value=0.0)

                update_btn = st.form_submit_button("–û–Ω–æ–≤–∏—Ç–∏")
                if update_btn:
                    room.type_id = type_dict[new_type]
                    room.status = RoomStatus[new_status]
                    room.price_per_night = new_price
                    session.commit()
                    st.success("‚úÖ –ö—ñ–º–Ω–∞—Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞!")

            if st.button("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –∫—ñ–º–Ω–∞—Ç—É"):
                session.delete(room)
                session.commit()
                st.success("üóëÔ∏è –ö—ñ–º–Ω–∞—Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–∞")
                st.experimental_rerun()
        else:
            st.info("–ö—ñ–º–Ω–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")

elif menu == "–ú–µ–Ω—é –ø–æ—Å–∞–¥":
    st.subheader("üè¢ –ú–µ–Ω—é –ø–æ—Å–∞–¥")

    # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –ø–æ—Å–∞–¥–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ –≤–∏–±–æ—Ä—É
    positions = session.query(Position).all()
    pos_dict = {f"{p.title} (ID {p.id})": p.id for p in positions}

    tab_add, tab_view, tab_edit = st.tabs(["‚ûï –î–æ–¥–∞—Ç–∏", "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ / –ü–æ—à—É–∫", "‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏"])

    # ‚ûï –î–æ–¥–∞—Ç–∏
    with tab_add:
        with st.form("add_position_form"):
            title = st.text_input("–ù–∞–∑–≤–∞ –ø–æ—Å–∞–¥–∏")
            level = st.text_input("–†—ñ–≤–µ–Ω—å")
            department = st.text_input("–í—ñ–¥–¥—ñ–ª")
            submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –ø–æ—Å–∞–¥—É")

            if submitted:
                if title.strip() == "" or level.strip() == "" or department.strip() == "":
                    st.error("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è.")
                else:
                    new_pos = Position(title=title.strip(), level=level.strip(), department=department.strip())
                    session.add(new_pos)
                    session.commit()
                    st.success("‚úÖ –ü–æ—Å–∞–¥—É –¥–æ–¥–∞–Ω–æ.")
                    st.rerun()

    # üìã –ü–µ—Ä–µ–≥–ª—è–¥ / –ü–æ—à—É–∫
    with tab_view:
        keyword = st.text_input("–ü–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é –∞–±–æ –≤—ñ–¥–¥—ñ–ª–æ–º")
        if keyword:
            filtered = session.query(Position).filter(
                (Position.title.ilike(f"%{keyword}%")) | (Position.department.ilike(f"%{keyword}%"))
            ).all()
        else:
            filtered = positions

        if filtered:
            for p in filtered:
                st.markdown(f"**ID:** {p.id} | **–ù–∞–∑–≤–∞:** {p.title} | **–†—ñ–≤–µ–Ω—å:** {p.level} | **–í—ñ–¥–¥—ñ–ª:** {p.department}")
        else:
            st.info("–ü–æ—Å–∞–¥–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")

    # ‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è / –í–∏–¥–∞–ª–µ–Ω–Ω—è
    with tab_edit:
        if not positions:
            st.info("–ü–æ—Å–∞–¥–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
        else:
            selected_pos = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–∞–¥—É", list(pos_dict.keys()))
            pos_id = pos_dict[selected_pos]
            pos = session.query(Position).get(pos_id)

            with st.form("edit_position_form"):
                new_title = st.text_input("–ù–∞–∑–≤–∞", value=pos.title)
                new_level = st.text_input("–†—ñ–≤–µ–Ω—å", value=pos.level)
                new_department = st.text_input("–í—ñ–¥–¥—ñ–ª", value=pos.department)
                update_btn = st.form_submit_button("–û–Ω–æ–≤–∏—Ç–∏")

                if update_btn:
                    pos.title = new_title.strip() or pos.title
                    pos.level = new_level.strip() or pos.level
                    pos.department = new_department.strip() or pos.department
                    session.commit()
                    st.success("‚úÖ –ü–æ—Å–∞–¥—É –æ–Ω–æ–≤–ª–µ–Ω–æ.")
                    st.experimental_rerun()

            if st.button("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –ø–æ—Å–∞–¥—É"):
                session.delete(pos)
                session.commit()
                st.success("üóëÔ∏è –ü–æ—Å–∞–¥—É –≤–∏–¥–∞–ª–µ–Ω–æ.")
                st.experimental_rerun()

elif menu == "–ú–µ–Ω—é –ø–µ—Ä—Å–æ–Ω–∞–ª—É":
    st.subheader("üë• –ú–µ–Ω—é –ø–µ—Ä—Å–æ–Ω–∞–ª—É")

    positions = session.query(Position).all()
    pos_dict = {f"{p.title} (ID {p.id})": p.id for p in positions}

    hotel = session.query(Hotel).first()
    if not hotel:
        st.warning("–°–ø–æ—á–∞—Ç–∫—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–π—Ç–µ –≥–æ—Ç–µ–ª—å.")
    else:
        staff_list = session.query(Staff).all()
        staff_dict = {f"{s.name} (ID {s.id})": s.id for s in staff_list}

        tab_add, tab_view, tab_edit = st.tabs(["‚ûï –î–æ–¥–∞—Ç–∏", "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ / –ü–æ—à—É–∫", "‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏"])

        # ‚ûï –î–æ–¥–∞—Ç–∏
        with tab_add:
            with st.form("add_staff_form"):
                name = st.text_input("–Ü–º'—è –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞")
                if positions:
                    position_name = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–∞–¥—É", list(pos_dict.keys()))
                    position_id = pos_dict.get(position_name)
                else:
                    st.info("–°–ø–æ—á–∞—Ç–∫—É –¥–æ–¥–∞–π—Ç–µ –ø–æ—Å–∞–¥–∏.")
                    position_id = None
                phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω")
                salary = st.text_input("–ó–∞—Ä–ø–ª–∞—Ç–∞")
                submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞")

                if submitted:
                    if not (name and position_id and phone and salary):
                        st.error("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è.")
                    else:
                        try:
                            salary_float = float(salary)
                            new_staff = Staff(
                                name=name.strip(),
                                position_id=position_id,
                                phone=phone.strip(),
                                salary=salary_float,
                                hotel_id=hotel.id,
                            )
                            session.add(new_staff)
                            session.commit()
                            st.success("‚úÖ –ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –¥–æ–¥–∞–Ω–æ.")
                            st.rerun()
                        except ValueError:
                            st.error("–ó–∞—Ä–ø–ª–∞—Ç–∞ –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º.")

        # üìã –ü–µ—Ä–µ–≥–ª—è–¥ / –ü–æ—à—É–∫
        with tab_view:
            keyword = st.text_input("–ü–æ—à—É–∫ –∑–∞ —ñ–º'—è–º –∞–±–æ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º")
            if keyword:
                filtered = session.query(Staff).filter(
                    (Staff.name.ilike(f"%{keyword}%")) | (Staff.phone.ilike(f"%{keyword}%"))
                ).all()
            else:
                filtered = staff_list

            if filtered:
                for s in filtered:
                    pos_title = s.position.title if s.position else "–ù–µ –≤–∫–∞–∑–∞–Ω–∞"
                    st.markdown(
                        f"**ID:** {s.id} | **–Ü–º'—è:** {s.name} | **–ü–æ—Å–∞–¥–∞:** {pos_title} | "
                        f"**–¢–µ–ª–µ—Ñ–æ–Ω:** {s.phone} | **–ó–∞—Ä–ø–ª–∞—Ç–∞:** {s.salary}"
                    )
            else:
                st.info("–ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

        # ‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏
        with tab_edit:
            if not staff_list:
                st.info("–ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
            else:
                selected_staff = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞", list(staff_dict.keys()))
                staff_id = staff_dict[selected_staff]
                staff = session.query(Staff).get(staff_id)

                with st.form("edit_staff_form"):
                    new_name = st.text_input("–Ü–º'—è", value=staff.name)
                    if positions:
                        pos_name = next((k for k, v in pos_dict.items() if v == staff.position_id), None)
                        new_position_name = st.selectbox("–ü–æ—Å–∞–¥–∞", list(pos_dict.keys()), index=list(pos_dict.keys()).index(pos_name) if pos_name else 0)
                        new_position_id = pos_dict.get(new_position_name)
                    else:
                        new_position_id = None
                    new_phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω", value=staff.phone)
                    new_salary = st.text_input("–ó–∞—Ä–ø–ª–∞—Ç–∞", value=str(staff.salary))
                    update_btn = st.form_submit_button("–û–Ω–æ–≤–∏—Ç–∏")

                    if update_btn:
                        if not (new_name and new_position_id and new_phone and new_salary):
                            st.error("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è.")
                        else:
                            try:
                                staff.name = new_name.strip()
                                staff.position_id = new_position_id
                                staff.phone = new_phone.strip()
                                staff.salary = float(new_salary)
                                session.commit()
                                st.success("‚úÖ –ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ.")
                                st.experimental_rerun()
                            except ValueError:
                                st.error("–ó–∞—Ä–ø–ª–∞—Ç–∞ –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º.")

                if st.button("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞"):
                    session.delete(staff)
                    session.commit()
                    st.success("üóëÔ∏è –ü—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–æ.")
                    st.experimental_rerun()

elif menu == "–ú–µ–Ω—é –ø–æ—Å–ª—É–≥":
    st.subheader("üõéÔ∏è –ú–µ–Ω—é –ø–æ—Å–ª—É–≥")

    services = session.query(Service).all()
    service_dict = {f"{s.name} (ID {s.id})": s.id for s in services}

    tab_add, tab_view, tab_edit, tab_sort = st.tabs(["‚ûï –î–æ–¥–∞—Ç–∏", "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ / –ü–æ—à—É–∫", "‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏", "üîΩ –°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑–∞ —Ü—ñ–Ω–æ—é"])

    # ‚ûï –î–æ–¥–∞—Ç–∏ –ø–æ—Å–ª—É–≥—É
    with tab_add:
        with st.form("add_service_form"):
            name = st.text_input("–ù–∞–∑–≤–∞ –ø–æ—Å–ª—É–≥–∏")
            price = st.text_input("–¶—ñ–Ω–∞ –ø–æ—Å–ª—É–≥–∏")
            submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –ø–æ—Å–ª—É–≥—É")

            if submitted:
                if not (name and price):
                    st.error("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è.")
                else:
                    try:
                        price_val = float(price)
                        new_service = Service(name=name.strip(), price=price_val)
                        session.add(new_service)
                        session.commit()
                        st.success("‚úÖ –ü–æ—Å–ª—É–≥—É –¥–æ–¥–∞–Ω–æ.")
                        st.rerun()
                    except ValueError:
                        st.error("–¶—ñ–Ω–∞ –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º.")

    # üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ / –ü–æ—à—É–∫
    with tab_view:
        keyword = st.text_input("–ü–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é –ø–æ—Å–ª—É–≥–∏")
        if keyword:
            filtered = session.query(Service).filter(Service.name.ilike(f"%{keyword}%")).all()
        else:
            filtered = services

        if filtered:
            for s in filtered:
                st.markdown(f"**ID:** {s.id} | **–ù–∞–∑–≤–∞:** {s.name} | **–¶—ñ–Ω–∞:** {s.price}")
        else:
            st.info("–ü–æ—Å–ª—É–≥–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")

    # ‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏
    with tab_edit:
        if not services:
            st.info("–ü–æ—Å–ª—É–≥–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
        else:
            selected_service = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É", list(service_dict.keys()))
            service_id = service_dict[selected_service]
            service = session.query(Service).get(service_id)

            with st.form("edit_service_form"):
                new_name = st.text_input("–ù–∞–∑–≤–∞", value=service.name)
                new_price = st.text_input("–¶—ñ–Ω–∞", value=str(service.price))
                update_btn = st.form_submit_button("–û–Ω–æ–≤–∏—Ç–∏")

                if update_btn:
                    if not (new_name and new_price):
                        st.error("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è.")
                    else:
                        try:
                            service.name = new_name.strip()
                            service.price = float(new_price)
                            session.commit()
                            st.success("‚úÖ –ü–æ—Å–ª—É–≥—É –æ–Ω–æ–≤–ª–µ–Ω–æ.")
                            st.experimental_rerun()
                        except ValueError:
                            st.error("–¶—ñ–Ω–∞ –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º.")

            if st.button("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É"):
                session.delete(service)
                session.commit()
                st.success("üóëÔ∏è –ü–æ—Å–ª—É–≥—É –≤–∏–¥–∞–ª–µ–Ω–æ.")
                st.experimental_rerun()

    # üîΩ –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ —Ü—ñ–Ω–æ—é
    with tab_sort:
        sorted_services = session.query(Service).order_by(Service.price).all()
        if sorted_services:
            for s in sorted_services:
                st.markdown(f"**ID:** {s.id} | **–ù–∞–∑–≤–∞:** {s.name} | **–¶—ñ–Ω–∞:** {s.price}")
        else:
            st.info("–ü–æ—Å–ª—É–≥–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.")

elif menu == "–ú–µ–Ω—é –±—Ä–æ–Ω—é–≤–∞–Ω—å":
    st.subheader("üìÖ –ú–µ–Ω—é –±—Ä–æ–Ω—é–≤–∞–Ω—å")

    guests = session.query(Guest).all()
    guest_dict = {f"{g.name} (ID {g.id})": g.id for g in guests}

    rooms = session.query(Room).filter(Room.status == RoomStatus.–í—ñ–ª—å–Ω–∏–π).all()
    room_dict = {f"–¢–∏–ø: {r.type.type}, –¶—ñ–Ω–∞: {r.price_per_night}, ID: {r.id}": r.id for r in rooms}

    tab_add, tab_view, tab_edit, tab_sort = st.tabs(["‚ûï –î–æ–¥–∞—Ç–∏", "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ / –ü–æ—à—É–∫", "‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏", "üîΩ –°–æ—Ä—Ç—É–≤–∞—Ç–∏ –∑–∞ –∑–∞—ó–∑–¥–æ–º"])

    # ‚ûï –î–æ–¥–∞—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è
    with tab_add:
        if not guests:
            st.info("–ù–µ–º–∞—î –≥–æ—Å—Ç–µ–π –¥–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è. –î–æ–¥–∞–π—Ç–µ –≥–æ—Å—Ç–µ–π.")
        elif not rooms:
            st.info("–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫—ñ–º–Ω–∞—Ç –¥–ª—è –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è.")
        else:
            with st.form("add_booking_form"):
                selected_guest = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –≥–æ—Å—Ç—è", list(guest_dict.keys()))
                selected_room = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –∫—ñ–º–Ω–∞—Ç—É", list(room_dict.keys()))
                check_in_str = st.date_input("–î–∞—Ç–∞ –∑–∞—ó–∑–¥—É", value=datetime.date.today())
                check_out_str = st.date_input("–î–∞—Ç–∞ –≤–∏—ó–∑–¥—É", value=datetime.date.today() + datetime.timedelta(days=1))
                submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è")

                if submitted:
                    guest_id = guest_dict[selected_guest]
                    room_id = room_dict[selected_room]

                    if check_out_str <= check_in_str:
                        st.error("–î–∞—Ç–∞ –≤–∏—ó–∑–¥—É –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –ø—ñ–∑–Ω—ñ—à–µ –¥–∞—Ç–∏ –∑–∞—ó–∑–¥—É.")
                    else:
                        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–π–Ω—è—Ç–æ—Å—Ç—ñ –∫—ñ–º–Ω–∞—Ç–∏
                        overlapping = session.query(Booking).filter(
                            Booking.room_id == room_id,
                            Booking.status == BookingStatus.–ê–∫—Ç–∏–≤–Ω–æ,
                            Booking.check_out > check_in_str,
                            Booking.check_in < check_out_str
                        ).count()
                        room_obj = session.query(Room).get(room_id)
                        max_guests = room_obj.type.max_guests

                        if overlapping >= max_guests:
                            st.error(f"–ö—ñ–º–Ω–∞—Ç–∞ –≤–∂–µ –∑–∞–π–Ω—è—Ç–∞ –Ω–∞ —Ü–µ–π –ø–µ—Ä—ñ–æ–¥. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ—Å—Ç–µ–π: {max_guests}")
                        else:
                            booking = Booking(
                                guest_id=guest_id,
                                room_id=room_id,
                                check_in=check_in_str,
                                check_out=check_out_str,
                                status=BookingStatus.–ê–∫—Ç–∏–≤–Ω–æ,
                                price_per_night=room_obj.price_per_night
                            )
                            session.add(booking)
                            if overlapping + 1 >= max_guests:
                                room_obj.status = RoomStatus.–ó–∞–π–Ω—è—Ç–∏–π
                            session.commit()
                            st.success("‚úÖ –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ.")
                            st.rerun()

    # üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ / –ü–æ—à—É–∫ –±—Ä–æ–Ω—é–≤–∞–Ω—å
    with tab_view:
        keyword = st.text_input("–ü–æ—à—É–∫ –±—Ä–æ–Ω—é–≤–∞–Ω—å –∑–∞ —ñ–º'—è–º –≥–æ—Å—Ç—è")
        if keyword:
            guests_found = session.query(Guest).filter(Guest.name.ilike(f"%{keyword}%")).all()
            guest_ids = [g.id for g in guests_found]
            bookings = session.query(Booking).filter(Booking.guest_id.in_(guest_ids)).all()
        else:
            bookings = session.query(Booking).all()

        if bookings:
            for b in bookings:
                guest = session.query(Guest).get(b.guest_id)
                room = session.query(Room).get(b.room_id)
                st.markdown(
                    f"**ID:** {b.id} | –ì—ñ—Å—Ç—å: {guest.name if guest else '–í–∏–¥–∞–ª–µ–Ω–æ'} | "
                    f"–ö—ñ–º–Ω–∞—Ç–∞: {room.type.type if room else '–í–∏–¥–∞–ª–µ–Ω–æ'} | "
                    f"–ó–∞—ó–∑–¥: {b.check_in} | –í–∏—ó–∑–¥: {b.check_out} | –°—Ç–∞—Ç—É—Å: {b.status.value} | –¶—ñ–Ω–∞ –∑–∞ –Ω—ñ—á: {b.price_per_night}"
                )
        else:
            st.info("–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

    # ‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ / –í–∏–¥–∞–ª–∏—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è
    with tab_edit:
        bookings_all = session.query(Booking).all()
        if not bookings_all:
            st.info("–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
        else:
            booking_dict = {f"ID {b.id} | –ì—ñ—Å—Ç—å ID {b.guest_id} | –ö—ñ–º–Ω–∞—Ç–∞ ID {b.room_id}": b.id for b in bookings_all}
            selected_booking_key = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è", list(booking_dict.keys()))
            booking_id = booking_dict[selected_booking_key]
            booking = session.query(Booking).get(booking_id)

            with st.form("edit_booking_form"):
                new_status = st.selectbox("–°—Ç–∞—Ç—É—Å –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è", list(BookingStatus), index=list(BookingStatus).index(booking.status))
                new_check_in = st.date_input("–î–∞—Ç–∞ –∑–∞—ó–∑–¥—É", booking.check_in)
                new_check_out = st.date_input("–î–∞—Ç–∞ –≤–∏—ó–∑–¥—É", booking.check_out)
                update_btn = st.form_submit_button("–û–Ω–æ–≤–∏—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è")

                if update_btn:
                    if new_check_out <= new_check_in:
                        st.error("–î–∞—Ç–∞ –≤–∏—ó–∑–¥—É –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –ø—ñ–∑–Ω—ñ—à–µ –¥–∞—Ç–∏ –∑–∞—ó–∑–¥—É.")
                    else:
                        booking.status = new_status
                        booking.check_in = new_check_in
                        booking.check_out = new_check_out
                        session.commit()
                        st.success("‚úÖ –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ.")
                        st.experimental_rerun()

            if st.button("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è"):
                room_obj = session.query(Room).get(booking.room_id)
                if room_obj:
                    room_obj.status = RoomStatus.–í—ñ–ª—å–Ω–∏–π
                session.delete(booking)
                session.commit()
                st.success("üóëÔ∏è –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–æ.")
                st.experimental_rerun()

    # üîΩ –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –±—Ä–æ–Ω—é–≤–∞–Ω—å –∑–∞ –¥–∞—Ç–æ—é –∑–∞—ó–∑–¥—É
    with tab_sort:
        sorted_bookings = session.query(Booking).order_by(Booking.check_in).all()
        if sorted_bookings:
            for b in sorted_bookings:
                guest = session.query(Guest).get(b.guest_id)
                room = session.query(Room).get(b.room_id)
                st.markdown(
                    f"**ID:** {b.id} | –ì—ñ—Å—Ç—å: {guest.name if guest else '–í–∏–¥–∞–ª–µ–Ω–æ'} | "
                    f"–ö—ñ–º–Ω–∞—Ç–∞: {room.type.type if room else '–í–∏–¥–∞–ª–µ–Ω–æ'} | "
                    f"–ó–∞—ó–∑–¥: {b.check_in} | –í–∏—ó–∑–¥: {b.check_out} | –°—Ç–∞—Ç—É—Å: {b.status.value}"
                )
        else:
            st.info("–ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

elif menu == "–ú–µ–Ω—é –ø–æ—Å–ª—É–≥ –≥–æ—Å—Ç–µ–π":
    st.subheader("üõéÔ∏è –ú–µ–Ω—é –ì—ñ—Å—Ç—å-–°–µ—Ä–≤—ñ—Å")

    guests = session.query(Guest).all()
    guest_dict = {f"{g.name} (ID {g.id})": g.id for g in guests}

    services = session.query(Service).all()
    service_dict = {f"{s.name} (ID {s.id})": s.id for s in services}

    tab_add, tab_view, tab_search, tab_edit, tab_delete = st.tabs([
        "‚ûï –î–æ–¥–∞—Ç–∏ –ø–æ—Å–ª—É–≥—É –≥–æ—Å—Ç—é",
        "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ –ø–æ—Å–ª—É–≥–∏",
        "üîç –ü–æ—à—É–∫ –ø–æ—Å–ª—É–≥",
        "‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø–æ—Å–ª—É–≥—É",
        "üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É"
    ])

    # ‚ûï –î–æ–¥–∞—Ç–∏ –ø–æ—Å–ª—É–≥—É –≥–æ—Å—Ç—é
    with tab_add:
        if not guests:
            st.info("–ù–µ–º–∞—î –≥–æ—Å—Ç–µ–π. –°–ø–æ—á–∞—Ç–∫—É –¥–æ–¥–∞–π—Ç–µ –≥–æ—Å—Ç–µ–π.")
        elif not services:
            st.info("–ù–µ–º–∞—î –ø–æ—Å–ª—É–≥. –°–ø–æ—á–∞—Ç–∫—É –¥–æ–¥–∞–π—Ç–µ –ø–æ—Å–ª—É–≥–∏.")
        else:
            with st.form("add_guest_service_form"):
                selected_guest = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –≥–æ—Å—Ç—è", list(guest_dict.keys()))
                selected_service = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É", list(service_dict.keys()))
                submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –ø–æ—Å–ª—É–≥—É")

                if submitted:
                    guest_id = guest_dict[selected_guest]
                    service_id = service_dict[selected_service]

                    gs = GuestService(guest_id=guest_id, service_id=service_id)
                    session.add(gs)
                    session.commit()
                    st.success("‚úÖ –ü–æ—Å–ª—É–≥–∞ –≥–æ—Å—Ç—é –¥–æ–¥–∞–Ω–∞.")
                    st.rerun()

    # üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ –ø–æ—Å–ª—É–≥–∏ –≥–æ—Å—Ç–µ–π
    with tab_view:
        guest_services = session.query(GuestService).all()
        if guest_services:
            for gs in guest_services:
                st.markdown(
                    f"**ID:** {gs.id} | –ì—ñ—Å—Ç—å: {getattr(gs.guest, 'name', '–í–∏–¥–∞–ª–µ–Ω–æ') if hasattr(gs, 'guest') and gs.guest else '–í–∏–¥–∞–ª–µ–Ω–æ'} | "
                    f"–ü–æ—Å–ª—É–≥–∞: {getattr(gs, 'service', None).name if getattr(gs, 'service', None) else '–í–∏–¥–∞–ª–µ–Ω–æ'} "
                    #f"**ID:** {gs.id} | –ì—ñ—Å—Ç—å: {gs.guest.name if gs.guest else '–í–∏–¥–∞–ª–µ–Ω–æ'} | "
                    #f"–ü–æ—Å–ª—É–≥–∞: {gs.service.name if gs.service else '–í–∏–¥–∞–ª–µ–Ω–æ'} | –î–∞—Ç–∞: {gs.date}"
                )
        else:
            st.info("–ü–æ—Å–ª—É–≥–∏ –≥–æ—Å—Ç–µ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")

    # üîç –ü–æ—à—É–∫ –ø–æ—Å–ª—É–≥ –≥–æ—Å—Ç–µ–π
    with tab_search:
        keyword = st.text_input("–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –≥–æ—Å—Ç—è –∞–±–æ –Ω–∞–∑–≤—É –ø–æ—Å–ª—É–≥–∏ –¥–ª—è –ø–æ—à—É–∫—É")
        if keyword:
            gs_list = session.query(GuestService).join(Guest).join(Service).filter(
                (Guest.name.ilike(f"%{keyword}%")) | (Service.name.ilike(f"%{keyword}%"))
            ).all()
            if gs_list:
                for gs in gs_list:
                    st.markdown(
                        f"**ID:** {gs.id} | –ì—ñ—Å—Ç—å: {gs.guest.name if gs.guest else '–í–∏–¥–∞–ª–µ–Ω–æ'} | "
                        f"–ü–æ—Å–ª—É–≥–∞: {gs.service.name if gs.service else '–í–∏–¥–∞–ª–µ–Ω–æ'} | –î–∞—Ç–∞: {gs.date}"
                    )
            else:
                st.info("–ü–æ—Å–ª—É–≥–∏ –≥–æ—Å—Ç–µ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ –∑–∞ –∑–∞–ø–∏—Ç–æ–º.")

    # ‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø–æ—Å–ª—É–≥—É –≥–æ—Å—Ç—é
    with tab_edit:
        gs_all = session.query(GuestService).all()
        if not gs_all:
            st.info("–ü–æ—Å–ª—É–≥–∏ –≥–æ—Å—Ç–µ–π –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
        else:
            gs_dict = {f"ID {gs.id} | –ì—ñ—Å—Ç—å ID {gs.guest_id} | –ü–æ—Å–ª—É–≥–∞ ID {gs.service_id}": gs.id for gs in gs_all}
            selected_gs_key = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è", list(gs_dict.keys()))
            gs_id = gs_dict[selected_gs_key]
            gs = session.query(GuestService).get(gs_id)

            with st.form("edit_guest_service_form"):
                new_guest = st.selectbox(
                    "–ì—ñ—Å—Ç—å",
                    list(guest_dict.keys()),
                    index=list(guest_dict.values()).index(gs.guest_id) if gs.guest_id in guest_dict.values() else 0
                )
                new_service = st.selectbox(
                    "–ü–æ—Å–ª—É–≥–∞",
                    list(service_dict.keys()),
                    index=list(service_dict.values()).index(gs.service_id) if gs.service_id in service_dict.values() else 0
                )
                update_btn = st.form_submit_button("–û–Ω–æ–≤–∏—Ç–∏")

                if update_btn:
                    gs.guest_id = guest_dict[new_guest]
                    gs.service_id = service_dict[new_service]
                    gs.date = new_date
                    session.commit()
                    st.success("‚úÖ –î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ.")
                    st.experimental_rerun()

    # üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É –≥–æ—Å—Ç—é
    with tab_delete:
        gs_all = session.query(GuestService).all()
        if not gs_all:
            st.info("–ü–æ—Å–ª—É–≥–∏ –≥–æ—Å—Ç–µ–π –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
        else:
            gs_dict = {f"ID {gs.id} | –ì—ñ—Å—Ç—å ID {gs.guest_id} | –ü–æ—Å–ª—É–≥–∞ ID {gs.service_id}": gs.id for gs in gs_all}
            selected_gs_key = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è", list(gs_dict.keys()))
            gs_id = gs_dict[selected_gs_key]
            gs = session.query(GuestService).get(gs_id)

            if st.button("–í–∏–¥–∞–ª–∏—Ç–∏ –ø–æ—Å–ª—É–≥—É"):
                session.delete(gs)
                session.commit()
                st.success("üóëÔ∏è –ü–æ—Å–ª—É–≥—É –≤–∏–¥–∞–ª–µ–Ω–æ.")
                st.experimental_rerun()

elif menu == "–ú–µ–Ω—é –æ–ø–ª–∞—Ç":
    st.subheader("üí≥ –ú–µ–Ω—é –æ–ø–ª–∞—Ç")

    tab_add, tab_view, tab_find, tab_edit, tab_delete = st.tabs([
        "‚ûï –î–æ–¥–∞—Ç–∏ –æ–ø–ª–∞—Ç—É",
        "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ –æ–ø–ª–∞—Ç–∏",
        "üîç –ü–æ—à—É–∫ –æ–ø–ª–∞—Ç",
        "‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –æ–ø–ª–∞—Ç—É",
        "üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –æ–ø–ª–∞—Ç—É"
    ])

    # ‚ûï –î–æ–¥–∞—Ç–∏ –æ–ø–ª–∞—Ç—É
    with tab_add:
        # –û—Ç—Ä–∏–º–∞—Ç–∏ ID –±—Ä–æ–Ω—é–≤–∞–Ω—å, —è–∫—ñ –≤–∂–µ –æ–ø–ª–∞—á–µ–Ω–æ
        paid_booking_ids = [p.booking_id for p in session.query(Payment.booking_id).all()]
        # –ê–∫—Ç–∏–≤–Ω—ñ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –±–µ–∑ –æ–ø–ª–∞—Ç–∏
        unpaid_bookings = session.query(Booking).filter(
            Booking.status == BookingStatus.–ê–∫—Ç–∏–≤–Ω–æ,
            ~Booking.id.in_(paid_booking_ids)
        ).all()

        if not unpaid_bookings:
            st.info("–í—Å—ñ –∞–∫—Ç–∏–≤–Ω—ñ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –≤–∂–µ –æ–ø–ª–∞—á–µ–Ω—ñ.")
        else:
            booking_dict = {
                f"ID {b.id} | –ì—ñ—Å—Ç—å: {session.query(Guest).get(b.guest_id).name} | "
                f"–ö—ñ–º–Ω–∞—Ç–∞: {session.query(Room).get(b.room_id).type.type} | "
                f"–ó {b.check_in} –¥–æ {b.check_out}": b.id for b in unpaid_bookings
            }

            with st.form("add_payment_form"):
                selected_booking = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –¥–ª—è –æ–ø–ª–∞—Ç–∏", list(booking_dict.keys()))
                booking_id = booking_dict[selected_booking]
                booking = session.query(Booking).get(booking_id)

                num_nights = (booking.check_out - booking.check_in).days
                room_cost = num_nights * booking.price_per_night

                guest_services = session.query(GuestService).filter_by(guest_id=booking.guest_id).all()
                service_cost = 0
                for gs in guest_services:
                    service = session.query(Service).get(gs.service_id)
                    if service:
                        service_cost += service.price

                total_amount = room_cost + service_cost

                st.markdown(f"–¶—ñ–Ω–∞ –∑–∞ –Ω–æ–º–µ—Ä: **{room_cost} –≥—Ä–Ω**")
                st.markdown(f"–¶—ñ–Ω–∞ –∑–∞ —Å–µ—Ä–≤—ñ—Å–∏: **{service_cost} –≥—Ä–Ω**")
                st.markdown(f"–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏: **{total_amount} –≥—Ä–Ω**")

                payment_method = st.selectbox("–°–ø–æ—Å—ñ–± –æ–ø–ª–∞—Ç–∏", [m.value for m in PaymentMethod])

                submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏ –æ–ø–ª–∞—Ç—É")

                if submitted:
                    method_enum = PaymentMethod(payment_method)
                    payment = Payment(
                        booking_id=booking.id,
                        amount=total_amount,
                        date=datetime.date.today(),
                        method=method_enum
                    )
                    session.add(payment)
                    session.commit()
                    st.success("‚úÖ –û–ø–ª–∞—Ç—É –¥–æ–¥–∞–Ω–æ.")
                    st.rerun()

    # üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ –æ–ø–ª–∞—Ç–∏
    with tab_view:
        payments = session.query(Payment).all()
        if not payments:
            st.info("–û–ø–ª–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")
        else:
            for p in payments:
                st.markdown(
                    f"**ID:** {p.id} | –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è ID: {p.booking_id} | "
                    f"–°—É–º–∞: {p.amount} –≥—Ä–Ω | –î–∞—Ç–∞: {p.date} | –ú–µ—Ç–æ–¥: {p.method.value}"
                )

    # üîç –ü–æ—à—É–∫ –æ–ø–ª–∞—Ç
    with tab_find:
        booking_id_input = st.text_input("–í–≤–µ–¥—ñ—Ç—å ID –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è –¥–ª—è –ø–æ—à—É–∫—É –æ–ø–ª–∞—Ç")
        if booking_id_input:
            try:
                booking_id = int(booking_id_input)
                payments = session.query(Payment).filter_by(booking_id=booking_id).all()
                if payments:
                    for p in payments:
                        st.markdown(
                            f"**ID:** {p.id} | –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è ID: {p.booking_id} | "
                            f"–°—É–º–∞: {p.amount} –≥—Ä–Ω | –î–∞—Ç–∞: {p.date} | –ú–µ—Ç–æ–¥: {p.method.value}"
                        )
                else:
                    st.info("–û–ø–ª–∞—Ç–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")
            except ValueError:
                st.error("–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç ID –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è.")

    # ‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –æ–ø–ª–∞—Ç—É
    with tab_edit:
        payments_all = session.query(Payment).all()
        if not payments_all:
            st.info("–û–ø–ª–∞—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
        else:
            payment_dict = {f"ID {p.id} | –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è ID {p.booking_id}": p.id for p in payments_all}
            selected_payment_key = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –æ–ø–ª–∞—Ç—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è", list(payment_dict.keys()))
            payment_id = payment_dict[selected_payment_key]
            payment = session.query(Payment).get(payment_id)

            with st.form("edit_payment_form"):
                new_amount = st.number_input("–°—É–º–∞", value=payment.amount, min_value=0.0, format="%.2f")
                new_date = st.date_input("–î–∞—Ç–∞", value=payment.date)
                new_method = st.selectbox("–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç–∏", [m.value for m in PaymentMethod], index=[m for m in PaymentMethod].index(payment.method))
                update_btn = st.form_submit_button("–û–Ω–æ–≤–∏—Ç–∏ –æ–ø–ª–∞—Ç—É")

                if update_btn:
                    payment.amount = new_amount
                    payment.date = new_date
                    payment.method = PaymentMethod(new_method)
                    session.commit()
                    st.success("‚úÖ –û–ø–ª–∞—Ç—É –æ–Ω–æ–≤–ª–µ–Ω–æ.")
                    st.experimental_rerun()

    # üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –æ–ø–ª–∞—Ç—É
    with tab_delete:
        payments_all = session.query(Payment).all()
        if not payments_all:
            st.info("–û–ø–ª–∞—Ç–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
        else:
            payment_dict = {f"ID {p.id} | –ë—Ä–æ–Ω—é–≤–∞–Ω–Ω—è ID {p.booking_id}": p.id for p in payments_all}
            selected_payment_key = st.selectbox("–û–±–µ—Ä—ñ—Ç—å –æ–ø–ª–∞—Ç—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è", list(payment_dict.keys()))
            payment_id = payment_dict[selected_payment_key]
            payment = session.query(Payment).get(payment_id)

            if st.button("üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –æ–ø–ª–∞—Ç—É"):
                session.delete(payment)
                session.commit()
                st.success("üóëÔ∏è –û–ø–ª–∞—Ç—É –≤–∏–¥–∞–ª–µ–Ω–æ.")
                st.experimental_rerun()


# –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó
# session.close() ‚Äî Streamlit –Ω–µ –ø–æ—Ç—Ä–µ–±—É—î —Ü—å–æ–≥–æ –Ω–∞–ø—Ä—è–º—É, —Å–µ—Å—ñ—è –∂–∏–≤–µ –∑ –ø—Ä–æ—Ü–µ—Å–æ–º
